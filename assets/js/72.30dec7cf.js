(window.webpackJsonp=window.webpackJsonp||[]).push([[72],{273:function(s,n,a){"use strict";a.r(n);var t=a(28),e=Object(t.a)({},(function(){var s=this,n=s.$createElement,a=s._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"css-面试题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css-面试题"}},[s._v("#")]),s._v(" CSS 面试题")]),s._v(" "),a("h2",{attrs:{id:"_1-高度已知，三栏布局，左右宽度-300，中间自适应"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-高度已知，三栏布局，左右宽度-300，中间自适应"}},[s._v("#")]),s._v(" 1. 高度已知，三栏布局，左右宽度 300，中间自适应")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("/* 浮动布局 */\n  .layout.float .left{\n    float:left;\n    width:300px;\n    background: red;\n  }\n  .layout.float .center{\n    background: yellow;\n  }\n  .layout.float .right{\n    float:right;\n    width:300px;\n    background: blue;\n  }\n\n /* 绝对定位布局 */\n .layout.absolute .left-center-right>div{\n  position: absolute;\n }\n.layout.absolute .left{\n  left:0;\n  width: 300px;\n  background: red;\n}\n.layout.absolute .center{\n  left: 300px;\n  right: 300px;\n  background: yellow;\n}\n.layout.absolute .right{\n  right:0;\n  width: 300px;\n  background: blue;\n}\n\n /* flex布局 */\n.layout.flexbox{\n  margin-top: 110px;\n}\n.layout.flexbox .left-center-right{\n  display: flex;\n}\n.layout.flexbox .left{\n  width: 300px;\n  background: red;\n}\n.layout.flexbox .center{\n  flex:1;\n  background: yellow;\n}\n.layout.flexbox .right{\n  width: 300px;\n  background: blue;\n}\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br"),a("span",{staticClass:"line-number"},[s._v("45")]),a("br"),a("span",{staticClass:"line-number"},[s._v("46")]),a("br"),a("span",{staticClass:"line-number"},[s._v("47")]),a("br"),a("span",{staticClass:"line-number"},[s._v("48")]),a("br"),a("span",{staticClass:"line-number"},[s._v("49")]),a("br"),a("span",{staticClass:"line-number"},[s._v("50")]),a("br"),a("span",{staticClass:"line-number"},[s._v("51")]),a("br"),a("span",{staticClass:"line-number"},[s._v("52")]),a("br"),a("span",{staticClass:"line-number"},[s._v("53")]),a("br"),a("span",{staticClass:"line-number"},[s._v("54")]),a("br"),a("span",{staticClass:"line-number"},[s._v("55")]),a("br")])]),a("p",[a("a",{attrs:{href:"https://juejin.im/post/5cdb7bc26fb9a0321557044d",target:"_blank",rel:"noopener noreferrer"}},[s._v("参考\nsnowLu 作者"),a("OutboundLink")],1)]),s._v(" "),a("h2",{attrs:{id:"_2-水平垂直居中"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-水平垂直居中"}},[s._v("#")]),s._v(" 2. 水平垂直居中")]),s._v(" "),a("p",[s._v("按照固定宽高和不固定宽高分类各说几个方法")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://juejin.im/post/58f818bbb123db006233ab2a",target:"_blank",rel:"noopener noreferrer"}},[s._v("实现水平居中垂直居中"),a("OutboundLink")],1)]),s._v(" "),a("h2",{attrs:{id:"_3-css-动画和-js-动画有什么区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-css-动画和-js-动画有什么区别"}},[s._v("#")]),s._v(" 3. css 动画和 js 动画有什么区别")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://developers.google.com/web/fundamentals/design-and-ux/animations/css-vs-javascript?hl=zh-cn",target:"_blank",rel:"noopener noreferrer"}},[s._v("developers"),a("OutboundLink")],1)]),s._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/classicemi/blog/issues/3",target:"_blank",rel:"noopener noreferrer"}},[s._v("CSS 动画 VS JavaScript"),a("OutboundLink")],1)]),s._v(" "),a("p",[a("a",{attrs:{href:"https://www.cnblogs.com/simba-lkj/p/6139066.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("css 动画与 js 动画的区别"),a("OutboundLink")],1)]),s._v(" "),a("h2",{attrs:{id:"_4-说说-bfc，什么情况下会生成-bfc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-说说-bfc，什么情况下会生成-bfc"}},[s._v("#")]),s._v(" 4. 说说 BFC，什么情况下会生成 BFC")]),s._v(" "),a("p",[s._v("BFC 生成了一套封闭的布局空间，内部子元素无论怎么布局，都不会影响到外部的元素。BFC 可以用来"),a("strong",[s._v("清除浮动")]),s._v("，"),a("strong",[s._v("防止 margin 重叠")]),s._v("，"),a("strong",[s._v("去除 float 文字环绕")]),s._v("，"),a("strong",[s._v("第一个子元素 margin-top 和父元素重叠")]),s._v("等。")]),s._v(" "),a("p",[s._v("以下几种元素会生成 BFC：")]),s._v(" "),a("ul",[a("li",[s._v("html 元素。")]),s._v(" "),a("li",[s._v("float 不是 none 的元素。")]),s._v(" "),a("li",[s._v("overflow: auto/hidden/scroll 的元素。")]),s._v(" "),a("li",[s._v("display: table-cell/inline-block 的元素。")]),s._v(" "),a("li",[s._v("position 不是 static 和 relative 的元素。")])]),s._v(" "),a("h2",{attrs:{id:"_5-css-的层叠上下文是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-css-的层叠上下文是什么"}},[s._v("#")]),s._v(" 5. CSS 的层叠上下文是什么")]),s._v(" "),a("p",[s._v("层叠上下文是 HTML 中的一个三维的概念，每个层叠上下文中都有一套元素的层叠排列顺序。页面根元素天生具有层叠上下文，所以整个页面处于一个“层叠结界”中。")]),s._v(" "),a("p",[s._v("层叠上下文的创建：")]),s._v(" "),a("ul",[a("li",[s._v("页面根元素："),a("code",[s._v("html")])]),s._v(" "),a("li",[s._v("z-index 值为数值的定位元素")]),s._v(" "),a("li",[s._v("其他 css 属性\n"),a("ul",[a("li",[s._v("opacity 不是 1")]),s._v(" "),a("li",[s._v("transform 不是 none")]),s._v(" "),a("li",[s._v("flex，z-index 不是 auto")])])])]),s._v(" "),a("p",[s._v("层叠上下文中的排列规则，从下到上：")]),s._v(" "),a("ul",[a("li",[s._v("background/border")]),s._v(" "),a("li",[s._v("负 z-index")]),s._v(" "),a("li",[s._v("block 块状水平盒子")]),s._v(" "),a("li",[s._v("float 浮动盒子")]),s._v(" "),a("li",[s._v("inline 水平盒子")]),s._v(" "),a("li",[s._v("z-index:auto, 或看成 z-index:0")]),s._v(" "),a("li",[s._v("正 z-index")])]),s._v(" "),a("p",[s._v("由此引申出：定位元素的"),a("code",[s._v("z-index：0")]),s._v("和"),a("code",[s._v("z-index：auto")]),s._v("的区别是，前者会创建层叠上下文，影响布局。")]),s._v(" "),a("h2",{attrs:{id:"_6-display-none-与-visibility：hidden-的区别？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-display-none-与-visibility：hidden-的区别？"}},[s._v("#")]),s._v(" 6. display:none 与 visibility：hidden 的区别？")]),s._v(" "),a("p",[s._v("display：none 不显示对应的元素，在文档布局中不再分配空间（回流+重绘）\nvisibility：hidden 隐藏对应元素，在文档布局中仍保留原来的空间（重绘）")]),s._v(" "),a("ul",[a("li",[s._v("position 跟 display、overflow、float 这些特性相互叠加后会怎么样？")])]),s._v(" "),a("p",[s._v("display 属性规定元素应该生成的框的类型；position 属性规定元素的定位类型；float 属性是一种布局方式，定义元素在哪个方向浮动。\n类似于优先级机制：position：absolute/fixed 优先级最高，有他们在时，float 不起作用，display 值需要调整。float 或者 absolute 定位的元素，只能是块元素或表格。")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("为什么会出现浮动和什么时候需要清除浮动？清除浮动的方式？")]),s._v(" "),a("ul",[a("li",[s._v("浮动元素碰到包含它的边框或者浮动元素的边框停留。由于浮动元素不在文档流中，所以文档流的块框表现得就像浮动框不存在一样。浮动元素会漂浮在文档流的块框上。\n浮动带来的问题：")])]),s._v(" "),a("ul",[a("li",[s._v("父元素的高度无法被撑开，影响与父元素同级的元素")]),s._v(" "),a("li",[s._v("与浮动元素同级的非浮动元素（内联元素）会跟随其后")]),s._v(" "),a("li",[s._v("若非第一个元素浮动，则该元素之前的元素也需要浮动，否则会影响页面显示的结构。")])]),s._v(" "),a("ul",[a("li",[s._v("清除浮动的方式：")])]),s._v(" "),a("ul",[a("li",[s._v("父级 div 定义 height")]),s._v(" "),a("li",[s._v("最后一个浮动元素后加空 div 标签 并添加样式 clear:both。")]),s._v(" "),a("li",[s._v("包含浮动元素的父标签添加样式 overflow 为 hidden 或 auto。")]),s._v(" "),a("li",[s._v("父级 div 定义 zoom")])])])]),s._v(" "),a("ul",[a("li",[s._v("浏览器是怎样解析 CSS 选择器的？\nCSS 选择器的解析是从右向左解析的。若从左向右的匹配，发现不符合规则，需要进行回溯，会损失很多性能。若从右向左匹配，先找到所有的最右节点，对于每一个节点，向上寻找其父节点直到找到根元素或满足条件的匹配规则，则结束这个分支的遍历。两种匹配规则的性能差别很大，是因为从右向左的匹配在第一步就筛选掉了大量的不符合条件的最右节点（叶子节点），而从左向右的匹配规则的性能都浪费在了失败的查找上面。\n而在 CSS 解析完毕后，需要将解析的结果与 DOM Tree 的内容一起进行分析建立一棵 Render Tree，最终用来进行绘图。在建立 Render Tree 时（WebKit 中的「Attachment」过程），浏览器就要为每个 DOM Tree 中的元素根据 CSS 的解析结果（Style Rules）来确定生成怎样的 Render Tree。")])]),s._v(" "),a("h2",{attrs:{id:"_7-怎么让-chrome-支持小于-12px-的文字？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-怎么让-chrome-支持小于-12px-的文字？"}},[s._v("#")]),s._v(" 7. 怎么让 Chrome 支持小于 12px 的文字？")]),s._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[s._v("p")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("font-size")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 10px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("-webkit-transform")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("scale")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("0.8"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("h2",{attrs:{id:"_8-如果需要手动写动画，你认为最小时间间隔是多久，为什么？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-如果需要手动写动画，你认为最小时间间隔是多久，为什么？"}},[s._v("#")]),s._v(" 8. 如果需要手动写动画，你认为最小时间间隔是多久，为什么？")]),s._v(" "),a("p",[s._v("多数显示器默认频率是 60Hz，即 1 秒刷新 60 次，所以理论上最小间隔为 1/60＊1000ms ＝ 16.7ms。")])])}),[],!1,null,null,null);n.default=e.exports}}]);