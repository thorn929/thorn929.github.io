(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{288:function(t,s,a){"use strict";a.r(s);var e=a(28),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),a("h2",{attrs:{id:"简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[t._v("#")]),t._v(" 简介")]),t._v(" "),a("blockquote",[a("p",[t._v("CSS（层叠样式表）用于设置和布置网页 - 例如，更改内容的字体，颜色，大小和间距，将其拆分为多个列，或添加动画和其他装饰功能。")])]),t._v(" "),a("ul",[a("li",[a("p",[a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Learn/CSS/First_steps",target:"_blank",rel:"noopener noreferrer"}},[t._v("学习 CSS 第一步 "),a("OutboundLink")],1)])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Learn/Getting_started_with_the_web/CSS_basics",target:"_blank",rel:"noopener noreferrer"}},[t._v("CSS 基础"),a("OutboundLink")],1)])])]),t._v(" "),a("h2",{attrs:{id:"盒模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#盒模型"}},[t._v("#")]),t._v(" 盒模型")]),t._v(" "),a("h4",{attrs:{id:"盒模型本质上是一个盒子，封装周围的-html-元素，它包括：外边距（margin）、边框（border）、内边距（padding）、实际内容（content）四个属性。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#盒模型本质上是一个盒子，封装周围的-html-元素，它包括：外边距（margin）、边框（border）、内边距（padding）、实际内容（content）四个属性。"}},[t._v("#")]),t._v(" 盒模型本质上是一个盒子，封装周围的 HTML 元素，它包括：外边距（margin）、边框（border）、内边距（padding）、实际内容（content）四个属性。")]),t._v(" "),a("p",[t._v("如下图：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://media.prod.mdn.mozit.cloud/attachments/2019/03/19/16558/29c6fe062e42a327fb549a081bc56632/box-model.png",alt:"盒子"}})]),t._v(" "),a("h4",{attrs:{id:"盒模型："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#盒模型："}},[t._v("#")]),t._v(" 盒模型：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("标准盒子模型("),a("code",[t._v("context-box")]),t._v(")：宽度 = 内容的宽度（content）+ border + padding + margin;")]),t._v(" "),a("p",[t._v("如下图:")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://media.prod.mdn.mozit.cloud/attachments/2019/03/19/16559/d7dbf772b414a2c96d8ac362c15ed352/standard-box-model.png",alt:"标准盒子模型"}})])]),t._v(" "),a("li",[a("p",[t._v("IE 盒子模型("),a("code",[t._v("border-box")]),t._v(")：宽度 = 内容宽度（content + border + padding）+ margin;")])])]),t._v(" "),a("p",[t._v("如下图:")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://media.prod.mdn.mozit.cloud/attachments/2019/03/19/16557/3e3f8c74c68f5c1fdc6779d7388bc099/alternate-box-model.png",alt:"IE盒子模型"}})]),t._v(" "),a("ul",[a("li",[t._v("box-sizing：用来控制元素的盒子模型的解析模式，默认为 content-box;\n"),a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/CSS/box-sizing",target:"_blank",rel:"noopener noreferrer"}},[t._v("官网 demo"),a("OutboundLink")],1)])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),a("p",[t._v("我们在编写页面代码时应尽量使用标准的 W3C 模型(需在页面中声明 DOCTYPE 类型)，这样可以避免多个浏览器对同一页面的不兼容。\n因为若不声明 DOCTYPE 类型，会由浏览器自己界定，在 IE 浏览器中 IE9 以下（IE6.IE7.IE8）的版本触发怪异模式，其他浏览器中会默认为 W3c 标准模式；若在页面中声明了 DOCTYPE 类型，所有的浏览器都会把盒模型解释为 W3C 盒模型。")])]),t._v(" "),a("h4",{attrs:{id:"总结："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结："}},[t._v("#")]),t._v(" 总结：")]),t._v(" "),a("ul",[a("li",[t._v("盒模型由四部分组成： 内容(content)、填充(padding)、边界(margin)、 边框(border)；")]),t._v(" "),a("li",[t._v("盒模型两种： IE 盒子模型、W3C 盒子模型；")]),t._v(" "),a("li",[t._v("区 别： IE 盒模型的 width 和 height 属性的范围包含了 border、padding 和 content。")])]),t._v(" "),a("h2",{attrs:{id:"元素分类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#元素分类"}},[t._v("#")]),t._v(" 元素分类")]),t._v(" "),a("blockquote",[a("p",[t._v("HTML 可以将元素分类方式分为行内元素、块状元素和行内块状元素三种。首先需要说明的是，这三者是可以互相转换的，使用 display 属性能够将三者任意转换：\n三种元素可以通过设置 display 互相转换")])]),t._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" inline"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*内联*/")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" inline-block"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*内联块级*/")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" block"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 块级 */")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("h3",{attrs:{id:"块级元素"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#块级元素"}},[t._v("#")]),t._v(" 块级元素")]),t._v(" "),a("p",[t._v("块级元素的 display 属性为 block")]),t._v(" "),a("p",[t._v("块级元素的特点")]),t._v(" "),a("ul",[a("li",[t._v("块级元素独占一行, 每个块级元素都是从一个新行开始显示")]),t._v(" "),a("li",[t._v("可设置元素的宽度、高度、行高、外边距、内边距")]),t._v(" "),a("li",[t._v("元素宽度在不设置的情况下，是它本身父容器的 100%（和父元素的宽度一致），除非设定一个宽度")]),t._v(" "),a("li",[t._v("可以容纳内联元素和其他块元素")])]),t._v(" "),a("p",[t._v("常见块级元素有：")]),t._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[t._v("<p>\n<h1>~<h6>\n<ol>\n<ul>\n<dl>\n<table>\n<form>\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("h3",{attrs:{id:"行内元素"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#行内元素"}},[t._v("#")]),t._v(" 行内元素")]),t._v(" "),a("p",[t._v("行内元素的 display 属性为：inline")]),t._v(" "),a("p",[t._v("行内元素的特点")]),t._v(" "),a("ul",[a("li",[t._v("和其他行内元素并列显示在一行上；")]),t._v(" "),a("li",[t._v("元素的宽度、高度不可设置，可设置行高 line-height")]),t._v(" "),a("li",[t._v("元素的宽度就是它包含的文字或图片的宽度，不可改变。")]),t._v(" "),a("li",[t._v("行内元素只能容纳文本或者其他行内元素")]),t._v(" "),a("li",[t._v("行内元素可设置水平方向的外边距，但垂直方向不可以设置，内边距 padding 水平和垂直可以设置")])]),t._v(" "),a("p",[t._v("常见行内元素元素：")]),t._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[t._v("<a>\n<span>\n<br>\n<i>\n<em>\n<strong>\n<label>\n<q>\n<cite>\n<code>\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br")])]),a("h3",{attrs:{id:"行内块级元素"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#行内块级元素"}},[t._v("#")]),t._v(" 行内块级元素")]),t._v(" "),a("p",[t._v("行内块级元素的 display 属性是 inline-block")]),t._v(" "),a("p",[t._v("行内块级元素是鉴于块级元素和行内元素之间的一种元素，它的特点是：")]),t._v(" "),a("ul",[a("li",[t._v("和其他元素都在一行上；")]),t._v(" "),a("li",[t._v("可设置元素的高度、宽度、外边距、内边距；\n行内块级元素有：")])]),t._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[t._v("<img>\n<input>\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("h2",{attrs:{id:"权重"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#权重"}},[t._v("#")]),t._v(" 权重")]),t._v(" "),a("p",[t._v("什么是权重？")]),t._v(" "),a("blockquote",[a("p",[t._v("在同一个元素使用不同的方式，声明了相同的一条或多条 css 规则，浏览器会通过权重来判断哪一种方式的声明，与这个元素最为相关，从而在该元素上应用这个声明方式声明的所有 css 规则")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("权重决定了你 css 规则怎样被浏览器解析直到生效。“css 权重关系到你的 css 规则是怎样显示的”。")])]),t._v(" "),a("li",[a("p",[t._v("当很多的规则被应用到某一个元素上时，权重是一个决定哪种规则生效，或者是优先级的过程。")])]),t._v(" "),a("li",[a("p",[t._v("每个选择器都有自己的权重。你的每条 css 规则，都包含一个权重级别。 这个级别是由不同的选择器加权计算的，通过权重，不同的样式最终会作用到你的网页中 。")])]),t._v(" "),a("li",[a("p",[t._v("如果两个选择器同时作用到一个元素上，权重高者生效。")])])]),t._v(" "),a("p",[t._v("权重的等级")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("1、!important，加在样式属性值后，权重值为 10000")]),t._v(" "),a("h4",{attrs:{id:"注意："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注意："}},[t._v("#")]),t._v(" 注意：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("- 一定要优先考虑使用样式规则的优先级来解决问题而不是 !important\n- 只有在需要覆盖全站或外部 CSS 的特定页面中使用 !important\n- 永远不要在你的插件中使用 !important\n- 永远不要在全站范围的 CSS 代码中使用 !important\n")])])])]),t._v(" "),a("li",[a("p",[t._v("2、行内样式，如：style=””，权重值为 1000")])]),t._v(" "),a("li",[a("p",[t._v("3、ID 选择器，如：#content，权重值为 100")])]),t._v(" "),a("li",[a("p",[t._v("4、类，伪类和属性选择器，如： content、:hover 权重值为 10")])]),t._v(" "),a("li",[a("p",[t._v("5、标签选择器和伪元素选择器，如：div、p、:before 权重值为 1")])]),t._v(" "),a("li",[a("p",[t._v("6、通配符（*）、子选择器（>）、相邻选择器（+）、同胞选择器（~）、权重值为 0")])])]),t._v(" "),a("p",[t._v("权重的基本规则")]),t._v(" "),a("ul",[a("li",[t._v("!important 优先级最高，但也会被权重高的 important 所覆盖")]),t._v(" "),a("li",[t._v("行内样式总会覆盖外部样式表的任何样式(除了!important)")]),t._v(" "),a("li",[t._v("单独使用一个选择器的时候，不能跨等级使 css 规则生效")]),t._v(" "),a("li",[t._v("如果两个权重不同的选择器作用在同一元素上，权重值高的 css 规则生效")]),t._v(" "),a("li",[t._v("如果两个相同权重的选择器作用在同一元素上：以后面出现的选择器为最后规则.")])]),t._v(" "),a("h4",{attrs:{id:"important-行内样式-id-选择器-类选择器-属性选择器-伪类选择器-元素选择器-伪元素-继承-通配符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#important-行内样式-id-选择器-类选择器-属性选择器-伪类选择器-元素选择器-伪元素-继承-通配符"}},[t._v("#")]),t._v(" !important>行内样式>ID 选择器 > 类选择器 | 属性选择器 | 伪类选择器 > 元素选择器 | 伪元素 > 继承 > 通配符")]),t._v(" "),a("h2",{attrs:{id:"选择器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#选择器"}},[t._v("#")]),t._v(" 选择器")]),t._v(" "),a("h4",{attrs:{id:"css-选择器规定了-css-规则会被应用到哪些元素上。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css-选择器规定了-css-规则会被应用到哪些元素上。"}},[t._v("#")]),t._v(" CSS 选择器规定了 CSS 规则会被应用到哪些元素上。")]),t._v(" "),a("p",[t._v("分类：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("基本选择器")]),t._v(" "),a("ul",[a("li",[t._v("通用选择器（*）")]),t._v(" "),a("li",[t._v("元素选择器（div,h1,p）")]),t._v(" "),a("li",[t._v("类选择器（.myclassname）")]),t._v(" "),a("li",[t._v("ID 选择器（#myid）")]),t._v(" "),a("li",[t._v('属性选择器（a[rel="external"]）')])])]),t._v(" "),a("li",[a("p",[t._v("组合器")]),t._v(" "),a("ul",[a("li",[t._v("后代组合器（li a）")]),t._v(" "),a("li",[t._v("直接子代组合器 （li > a）")]),t._v(" "),a("li",[t._v("一般兄弟组合器 (A ~ B)")]),t._v(" "),a("li",[t._v("紧邻兄弟组合器 (A + B)")]),t._v(" "),a("li",[t._v("列组合器 ( A || B)")])])]),t._v(" "),a("li",[a("p",[t._v("伪选择器")]),t._v(" "),a("ul",[a("li",[t._v("伪类 (a:hover)\n"),a("ul",[a("li",[t._v("其核心就是用来选择那些不能够被普通选择器选择的文档之外的元素，比如:hover。")])])]),t._v(" "),a("li",[t._v("伪元素 (p::first-line)\n"),a("ul",[a("li",[t._v("其核心就是需要创建通常不存在于文档中的元素，比如::before。")])])])])]),t._v(" "),a("li",[a("p",[t._v("分组选择器")]),t._v(" "),a("ul",[a("li",[t._v("选择器列表（A, B）")])])])]),t._v(" "),a("p",[a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/CSS/CSS_Selectors",target:"_blank",rel:"noopener noreferrer"}},[t._v("mdn"),a("OutboundLink")],1)]),t._v(" "),a("h3",{attrs:{id:"选择器优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#选择器优化"}},[t._v("#")]),t._v(" 选择器优化")]),t._v(" "),a("h4",{attrs:{id:"浏览器是如何识别你的选择器的"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器是如何识别你的选择器的"}},[t._v("#")]),t._v(" 浏览器是如何识别你的选择器的")]),t._v(" "),a("blockquote",[a("p",[t._v("浏览器读取你的选择器，遵循的原则是从选择器的右边到左边读取。换句话说，浏览器读取选择器的顺序是由右到左进行。选择器最右边的部分被称为”关键选择器“, 它将决定你的选择器的效率如何？是高是低。也就是说，对于一个给定的元素，需要匹配的规则越少，样式的解析的越快，性能就会有所提升")])]),t._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[t._v("div.nav > ul li a[title]\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("上面的实例来说，浏览器首先会尝试在你的 HTML 标签中寻找“a[title]”元素，接着在匹配“li 和 ul”，最后在去匹配“div.nav”。这就是前成所主的“选择器从右到左的原则")]),t._v(" "),a("p",[t._v("那么什么样类型的选择器，性能高？什么样类型的选择器性能低呢？")]),t._v(" "),a("h4",{attrs:{id:"选择器效率"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#选择器效率"}},[t._v("#")]),t._v(" 选择器效率")]),t._v(" "),a("p",[t._v("关于 css 选择器有一个固有的效率，"),a("a",{attrs:{href:"http://stevesouders.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Steve Souders"),a("OutboundLink")],1),t._v("给排的顺序，如下所示:")]),t._v(" "),a("ul",[a("li",[t._v("id 选择器（#myid）")]),t._v(" "),a("li",[t._v("类选择器（.myclassname）")]),t._v(" "),a("li",[t._v("标签选择器（div,h1,p）")]),t._v(" "),a("li",[t._v("相邻选择器（h1+p）")]),t._v(" "),a("li",[t._v("子选择器（ul > li）")]),t._v(" "),a("li",[t._v("后代选择器（li a）")]),t._v(" "),a("li",[t._v("通配符选择器（*）")]),t._v(" "),a("li",[t._v('属性选择器（a[rel="external"]）')]),t._v(" "),a("li",[t._v("伪类选择器（a:hover,li:nth-child）")])]),t._v(" "),a("p",[t._v("上面九种选择器的效率是从高到低排下来的，基中 ID 选择器的效率是最高，而伪类选择器的效率则是最低，更详细介绍看"),a("a",{attrs:{href:"https://csswizardry.com/2011/09/writing-efficient-css-selectors/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Writing efficient CSS selectors"),a("OutboundLink")],1)]),t._v(" "),a("h4",{attrs:{id:"来自-mozilla-的几点建议，david-在《use-efficient-css-selectors》-介绍了书写高效率的-css-选择器的方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#来自-mozilla-的几点建议，david-在《use-efficient-css-selectors》-介绍了书写高效率的-css-选择器的方法"}},[t._v("#")]),t._v(" 来自 Mozilla 的几点建议，David 在《"),a("a",{attrs:{href:"https://developers.google.com/speed/docs/insights/PrioritizeVisibleContent?csw=1",target:"_blank",rel:"noopener noreferrer"}},[t._v("Use efficient CSS selectors"),a("OutboundLink")],1),t._v("》 介绍了书写高效率的 css 选择器的方法")]),t._v(" "),a("ul",[a("li",[t._v("尽量避免多层嵌套")]),t._v(" "),a("li",[t._v("避免普遍规则")]),t._v(" "),a("li",[t._v("不要在 ID 选择器前加标签名或类名")]),t._v(" "),a("li",[t._v("不要在类名选择器前加标签名")]),t._v(" "),a("li",[t._v("尽可能使用具体的类别")]),t._v(" "),a("li",[t._v("避免使用后代选择器")]),t._v(" "),a("li",[t._v("标签分类规则中不应该包含一个子选择器")]),t._v(" "),a("li",[t._v("子选择器的问题")]),t._v(" "),a("li",[t._v("借助相关继承关系")]),t._v(" "),a("li",[t._v("使用范围内的样式表")])]),t._v(" "),a("h4",{attrs:{id:"测试对比"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#测试对比"}},[t._v("#")]),t._v(" 测试对比")]),t._v(" "),a("p",[t._v("类选择器：")]),t._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".element")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("background")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" red"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[t._v("后代选择器:")]),t._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".table tr td.element")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("background")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" red"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[t._v("对比结果：\n"),a("img",{attrs:{src:"css-all-selector.png",alt:"测试对比"}})]),t._v(" "),a("p",[a("a",{attrs:{href:"https://www.w3cplus.com/css/css-selector-performance",target:"_blank",rel:"noopener noreferrer"}},[t._v("选择器优化问题 - 大漠"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"定位"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#定位"}},[t._v("#")]),t._v(" 定位")]),t._v(" "),a("h3",{attrs:{id:"position"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#position"}},[t._v("#")]),t._v(" position")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("值")]),t._v(" "),a("th",[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("static")]),t._v(" "),a("td",[t._v("默认值")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("relative")]),t._v(" "),a("td",[t._v("生成相对定位的元素，相对于其正常位置进行定位。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("absolute")]),t._v(" "),a("td",[t._v("生成绝对定位的元素，相对于 static 定位以外的第一个父元素进行定位。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("fixed")]),t._v(" "),a("td",[t._v("生成绝对定位的元素，相对于浏览器窗口进行定位。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("sticky")]),t._v(" "),a("td",[t._v("粘性吸顶布局")])])])]),t._v(" "),a("p",[a("a",{attrs:{href:"http://js.jirengu.com/sevefebiha/1/edit?html,css,output",target:"_blank",rel:"noopener noreferrer"}},[t._v("粘粘属性"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"flex"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#flex"}},[t._v("#")]),t._v(" flex")]),t._v(" "),a("p",[t._v("布局的传统解决方案，基于盒状模型，依赖 display 属性 + position 属性 + float 属性。它对于那些特殊布局非常不方便，比如，垂直居中就不容易实现。")]),t._v(" "),a("blockquote",[a("p",[t._v("Flexible Box 即是弹性盒子，用来做弹性布局，可以配合 rem 处理尺寸适配的问题，小程序")])]),t._v(" "),a("ul",[a("li",[t._v("容器默认存在两根轴：水平的主轴（main axis）和垂直的交叉轴（cross axis）。主轴的开始位置（与边框的交叉点）叫做 main start，结束位置叫做 main end；交叉轴的开始位置叫做 cross start，结束位置叫做 cross end。")]),t._v(" "),a("li",[t._v("Flex 默认沿主轴排列，单个项目占据的主轴空间叫做 main size，占据的交叉轴空间叫做 cross size。")]),t._v(" "),a("li",[t._v("Flex 属性分为两部分：一部分作用于容器称容器属性，另一部分作用于项目称为项目属性")])]),t._v(" "),a("p",[a("img",{attrs:{src:"css-all-flex.png",alt:"flex-主轴、交叉轴"}})]),t._v(" "),a("p",[t._v("浏览器支持 Flexbox 的情况： 换过几次标准")]),t._v(" "),a("p",[a("img",{attrs:{src:"css-all-flex-compatible.jpg",alt:"兼容"}})]),t._v(" "),a("h3",{attrs:{id:"常用容器属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常用容器属性"}},[t._v("#")]),t._v(" 常用容器属性")]),t._v(" "),a("ul",[a("li",[t._v("flex-direction：改变主轴方向")])]),t._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex-direction")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("row")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("默认"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 从左到右"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" | "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("row-reverse")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("从右到左"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" | "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("column")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("从上到下"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" |\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("column-reverse")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("从下到上"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("ul",[a("li",[t._v("justify-content：控制子项在主轴的对齐方式")])]),t._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[t._v("justify-content")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("flex-start")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("默认"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 起点对齐"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" | "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("flex-end")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("终点对齐"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" | "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("center")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("居中"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" |\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("space-between")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("两端对齐"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" | "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("space-around")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("平均分配"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[a("img",{attrs:{src:"css-all-flex-3.png",alt:"flex"}})]),t._v(" "),a("ul",[a("li",[t._v("align-items：控制子项在侧轴的对齐方式")])]),t._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[t._v("align-items")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("flex-start")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("起点对齐"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" | "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("flex-end")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("终点对齐"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" | "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("center")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("居中"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" | "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("stretch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    默认值"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    未设置高度就铺满侧轴\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  | baseline（第一行文字的基线对齐）"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("p",[a("img",{attrs:{src:"css-all-flex-2.png",alt:"flex"}})]),t._v(" "),a("ul",[a("li",[t._v("align-content 属性定义了多根轴线的对齐方式。（如果项目只有一根轴线，该属性不起作用）")])]),t._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[t._v("align-content")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("flex-start")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("起点对齐"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" | "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("flex-end")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("终点对齐"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" | "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("center")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("居中"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" | "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("space-between")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    两端对齐\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  | "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("space-around")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("平均分配"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" | stretch（默认值）：轴线占满整个交叉轴。"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("p",[a("img",{attrs:{src:"css-all-flex-1.png",alt:"flex"}})]),t._v(" "),a("h3",{attrs:{id:"常用子项属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常用子项属性"}},[t._v("#")]),t._v(" 常用子项属性")]),t._v(" "),a("ul",[a("li",[t._v("order：属性定义项目的排列顺序")])]),t._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[t._v("order")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("数值越小，排列越靠前，默认为0。"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("ul",[a("li",[t._v("align-self：控制单个子项在侧轴的对齐方式\n"),a("blockquote",[a("p",[t._v("允许单个项目有与其他项目不一样的对齐方式，可覆盖 align-items 属性。默认值为 auto，表示继承父元素的 align-items 属性，如果没有父元素，则等同于 stretch")])])])]),t._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[t._v("\nalign-self："),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("auto")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("默认"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" | "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("flex-start")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("起点对齐"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" | "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("flex-end")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("终点对齐"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" | "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("center")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("居中"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" | stretch（未设置高度就铺满侧轴"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" | baseline（第一行文字的基线对齐）\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[a("img",{attrs:{src:"css-all-flex-4.png",alt:"flex"}})]),t._v(" "),a("ul",[a("li",[a("p",[t._v("flex: 默认值为 0 1 auto。后两个属性可选")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://jsbin.com/tojiqivupu/edit?html,css,output",target:"_blank",rel:"noopener noreferrer"}},[t._v("demo"),a("OutboundLink")],1)])])]),t._v(" "),a("p",[a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/CSS/flex",target:"_blank",rel:"noopener noreferrer"}},[t._v("文档"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("a",{attrs:{href:"https://www.ruanyifeng.com/blog/2015/07/flex-grammar.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("阮一峰的 flex 系列"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"bfc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bfc"}},[t._v("#")]),t._v(" BFC")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("什么是 BFC")]),t._v(" "),a("ul",[a("li",[t._v("块格式化上下文（Block Formatting Context，BFC） 是 Web 页面的可视 CSS 渲染的一部分，是块盒子的布局过程发生的区域，也是浮动元素与其他元素交互的区域。")]),t._v(" "),a("li",[t._v("具有 BFC 特性的元素可以看作是隔离了的独立容器，容器里面的元素不会在布局上影响到外面的元素，并且 BFC 具有普通容器所没有的一些特性\n")])])]),t._v(" "),a("h3",{attrs:{id:"bfc-渲染规则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bfc-渲染规则"}},[t._v("#")]),t._v(" BFC 渲染规则")]),t._v(" "),a("ul",[a("li",[t._v("Box 垂直方向的距离由 margin 决定，属于同一个 BFC 的两个相邻 Box 的 margin 会发生重叠。\n")]),t._v(" "),a("li",[t._v("BFC 的区域不会与浮动元素的 box 重叠。")]),t._v(" "),a("li",[t._v("BFC 是页面上的一个隔离的独立容器，容器里面的子元素不会影响到外面的元素。")]),t._v(" "),a("li",[t._v("计算 BFC 的高度时，浮动元素也会参与计算。")])]),t._v(" "),a("h3",{attrs:{id:"满足下列条件之一就可触发-bfc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#满足下列条件之一就可触发-bfc"}},[t._v("#")]),t._v(" 满足下列条件之一就可触发 BFC")]),t._v(" "),a("ul",[a("li",[t._v("根元素")]),t._v(" "),a("li",[t._v("float 的值不为 none（默认）")]),t._v(" "),a("li",[t._v("overflow 的值不为 visible（默认）")]),t._v(" "),a("li",[t._v("display 的值为 inline-block、table-cell、table-caption")]),t._v(" "),a("li",[t._v("position 的值为 absolute 或 fixed")])]),t._v(" "),a("h3",{attrs:{id:"bfc-应用场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bfc-应用场景"}},[t._v("#")]),t._v(" BFC 应用场景")]),t._v(" "),a("ul",[a("li",[a("ol",[a("li",[t._v("外边距塌陷")])]),t._v(" "),a("ul",[a("li",[t._v("创建新的 BFC 避免两个相邻 div 之间的 外边距合并 问题, 如果想要避免外边距的重叠，可以将其放 BFC 容器\n"),a("ul",[a("li",[a("a",{attrs:{href:"//code.h5jun.com/gemux/edit?html,css,output"}},[t._v("demo")])])])])])]),t._v(" "),a("li",[a("ol",{attrs:{start:"2"}},[a("li",[t._v("因浮动导致的盒子塌陷（清除浮动）")])]),t._v(" "),a("ul",[a("li",[t._v("由于容器内元素浮动，脱离了文档流，如果使触发容器的 BFC，那么容器将会包裹着浮动元素。\n"),a("ul",[a("li",[a("a",{attrs:{href:"//code.h5jun.com/puliz/1/edit?html,css,output"}},[t._v("demo1")]),t._v("： (延伸如何实现自适应两栏布局)")]),t._v(" "),a("li",[a("a",{attrs:{href:"//code.h5jun.com/wisov/edit?html,css,output"}},[t._v("demo2")])])])])])]),t._v(" "),a("li",[a("ol",{attrs:{start:"3"}},[a("li",[t._v("阻止元素被浮动元素覆盖")])]),t._v(" "),a("ul",[a("li",[t._v("由例子可知，第二个元素有部分被浮动元素所覆盖，但文本信息不会被浮动元素所覆盖\n"),a("ul",[a("li",[a("a",{attrs:{href:"//code.h5jun.com/gonuro/1/edit?html,css,output"}},[t._v("demo")])])])])])])]),t._v(" "),a("h3",{attrs:{id:"清除浮动"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#清除浮动"}},[t._v("#")]),t._v(" 清除浮动")]),t._v(" "),a("ol",[a("li",[t._v("额外标签（在最后一个浮动标签后，新加一个标签，给其设置 clear：both；）（不推荐:添加无意义标签）")])]),t._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".clearfix")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("clear")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" both"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("ol",{attrs:{start:"2"}},[a("li",[t._v("父级添加 overflow 属性（父元素添加 overflow:hidden）（不推荐: 内容过多的时候容易造成不会自动换行导致内容被隐藏掉）")])]),t._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".clearfix")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("overflow")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" hidden"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("ol",{attrs:{start:"3"}},[a("li",[t._v("利用伪类（推荐）\n")])]),t._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".clearfix:after")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("content")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("visibility")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" hidden"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" block"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("overflow")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" hidden"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("clear")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" both"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".clearfix")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("zoom")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 兼容 ie*/")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br")])]),a("h2",{attrs:{id:"浏览器渲染原理和过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器渲染原理和过程"}},[t._v("#")]),t._v(" 浏览器渲染原理和过程")]),t._v(" "),a("p",[t._v("Webkit 内核渲染引擎流程：\n"),a("img",{attrs:{src:"css-all-render-webkit.png",alt:"webkit内核"}})]),t._v(" "),a("p",[t._v("Gecko 内核渲染引擎流程：\n"),a("img",{attrs:{src:"css-all-render-gecko.jpg",alt:"Gecko内核"}})]),t._v(" "),a("p",[t._v("由上图两图, 虽然两种内核使用术语略有不同，但是整体渲染流程是基本相同的，以 webkit 为例可以看到大体分为 5 步")]),t._v(" "),a("ol",[a("li",[t._v("解析 HTML，生成 DOM 树; 同时解析 CSS，构建出 CSSOM 规则树")]),t._v(" "),a("li",[t._v("将 DOM 树和 CSSOM 规则树 结合，生成渲染树(Render Tree)")]),t._v(" "),a("li",[t._v("Layout(回流): 根据生成的渲染树，进行回流(Layout)，以计算每个节点的几何信息")]),t._v(" "),a("li",[t._v("Painting(重绘): 根据渲染树以及回流得到的几何信息，得到节点的绝对像素")]),t._v(" "),a("li",[t._v("Composite（渲染层合并): 最后调用 GPU 绘制，合成图层，显示在屏幕上。")])]),t._v(" "),a("h4",{attrs:{id:"构建-cssom-树时，会阻塞渲染，直至-cssom-树构建完成，构建-cssom-树是一个十分消耗性能的过程，应该尽量保证层级扁平，减少过度层叠，越是具体的-css-选择器，执行速度越慢（后代选择器）w3cplus"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#构建-cssom-树时，会阻塞渲染，直至-cssom-树构建完成，构建-cssom-树是一个十分消耗性能的过程，应该尽量保证层级扁平，减少过度层叠，越是具体的-css-选择器，执行速度越慢（后代选择器）w3cplus"}},[t._v("#")]),t._v(" 构建 CSSOM 树时，会阻塞渲染，直至 CSSOM 树构建完成，构建 CSSOM 树是一个十分消耗性能的过程，应该尽量保证层级扁平，减少过度层叠，越是具体的 CSS 选择器，执行速度越慢（后代选择器）"),a("a",{attrs:{href:"https://www.w3cplus.com/css/css-selector-performance",target:"_blank",rel:"noopener noreferrer"}},[t._v("W3CPLUS"),a("OutboundLink")],1)]),t._v(" "),a("h3",{attrs:{id:"相关链接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#相关链接"}},[t._v("#")]),t._v(" 相关链接")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/Performance/%E6%B5%8F%E8%A7%88%E5%99%A8%E6%B8%B2%E6%9F%93%E9%A1%B5%E9%9D%A2%E7%9A%84%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86",target:"_blank",rel:"noopener noreferrer"}},[t._v("mdn"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://blog.csdn.net/weixin_44198965/article/details/100329007",target:"_blank",rel:"noopener noreferrer"}},[t._v("浏览器原理"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.ruanyifeng.com/blog/2015/09/web-page-performance-in-depth.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("网页性能管理详解-阮一峰"),a("OutboundLink")],1)])]),t._v(" "),a("h2",{attrs:{id:"重绘和回流-重排"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#重绘和回流-重排"}},[t._v("#")]),t._v(" 重绘和回流(重排)")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("回流是布局或者几何属性需要改变就称为回流。")]),t._v(" "),a("p",[t._v("会发生回流的属性：")]),t._v(" "),a("ol",[a("li",[t._v("盒模型相关\n"),a("ul",[a("li",[t._v("width, height, padding, margin, display, border, min-height")])])]),t._v(" "),a("li",[t._v("定位属性和浮动\n"),a("ul",[a("li",[t._v("top, bottom, left, right, position, float, clear")])])]),t._v(" "),a("li",[t._v("改变节点内部文字结构\n"),a("ul",[a("li",[t._v("text-aligin, overflow, font-weight, font-family, line-height, vertival-aligin, font-size")])])])])]),t._v(" "),a("li",[a("p",[t._v("重绘是当节点需要更改外观而不会影响布局的，比如改变 color 就叫称为重绘")]),t._v(" "),a("p",[t._v("会发生重绘的属性：")]),t._v(" "),a("ul",[a("li",[t._v("color, border-style, border-radius, visibility, text-decoration, background, background-image, background-position, background-repeat, background-size, outline-color, outline-style, box-shadow")])])])]),t._v(" "),a("blockquote",[a("p",[t._v("回流必定会发生重绘，重绘不一定会引发回流。回流所需的成本比重绘高的多，改变深层次的节点很可能导致父节点的一系列回流。")])]),t._v(" "),a("p",[t._v("会导致回流的操作：")]),t._v(" "),a("ul",[a("li",[t._v("浏览器窗口大小发生改变")]),t._v(" "),a("li",[t._v("添加或删除可见的 DOM 元素")]),t._v(" "),a("li",[t._v("元素字体大小变化")]),t._v(" "),a("li",[t._v("元素尺寸或位置发生改变（包括外边距、内边框、边框大小、高度和宽度等）")]),t._v(" "),a("li",[t._v("元素内容变化（文字数量或图片大小，比如用户在 input 框中输入文字等等）")]),t._v(" "),a("li",[t._v("定位或者浮动")]),t._v(" "),a("li",[t._v("查询某些属性或调用某些方法")]),t._v(" "),a("li",[t._v("激活 CSS 伪类（例如：:hover）")])]),t._v(" "),a("h4",{attrs:{id:"重绘和回流其实和-event-loop-有关："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#重绘和回流其实和-event-loop-有关："}},[t._v("#")]),t._v(" 重绘和回流其实和 Event loop 有关：")]),t._v(" "),a("ol",[a("li",[t._v("当 Event loop 执行完 Microtasks 后，会判断 document 是否需要更新。因为浏览器是 60Hz 的刷新率，每 16ms 才会更新一次。")]),t._v(" "),a("li",[t._v("然后判断是否有 resize 或者 scroll ，有的话会去触发事件，所以 resize 和 scroll 事件也是至少 16ms 才会触发一次，并且自带节流功能。")]),t._v(" "),a("li",[t._v("判断是否触发了 media query")]),t._v(" "),a("li",[t._v("更新动画并且发送事件")]),t._v(" "),a("li",[t._v("判断是否有全屏操作事件")]),t._v(" "),a("li",[t._v("执行 requestAnimationFrame 回调")]),t._v(" "),a("li",[t._v("执行 IntersectionObserver 回调，该方法用于判断元素是否可见，可以用于懒加载上，但是兼容性不好")]),t._v(" "),a("li",[t._v("更新界面")]),t._v(" "),a("li",[t._v("以上就是一帧中可能会做的事情。如果在一帧中有空闲时间，就会去执行 requestIdleCallback 回调。")])]),t._v(" "),a("h3",{attrs:{id:"减少回流和重绘"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#减少回流和重绘"}},[t._v("#")]),t._v(" 减少回流和重绘")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("浏览器的优化机制")]),t._v(" "),a("p",[t._v("由于每次重排都会造成额外的计算消耗，因此大多数浏览器都会通过队列化修改并批量执行来优化重排过程。浏览器会将修改操作放入到队列里，直到过了一段时间或者操作达到了一个阈值，才清空队列。但是，当进行获取布局信息的操作的时候，会强制队列刷新，比如当你访问以下属性或者使用以下方法：")]),t._v(" "),a("ul",[a("li",[t._v("offsetTop、offsetLeft、offsetWidth、offsetHeight")]),t._v(" "),a("li",[t._v("scrollTop、scrollLeft、scrollWidth、scrollHeight")]),t._v(" "),a("li",[t._v("clientTop、clientLeft、clientWidth、clientHeight")]),t._v(" "),a("li",[t._v("getComputedStyle()")]),t._v(" "),a("li",[t._v("getBoundingClientRect")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://gist.github.com/paulirish/5d52fb081b3570c81e3a",target:"_blank",rel:"noopener noreferrer"}},[t._v("具体可以访问这个网站"),a("OutboundLink")],1),t._v("\n以上属性和方法都需要返回最新的布局信息，因此浏览器不得不清空队列，触发回流重绘来返回正确的值。因此，如果要使用它们，最好将值缓存起来。")])])]),t._v(" "),a("li",[a("p",[t._v("CSS 优化")]),t._v(" "),a("ul",[a("li",[t._v("使用 translate 代替 top，top 会触发 layout 但 translate 不会")]),t._v(" "),a("li",[t._v("减少使用 table 布局，可能很小的一个小改动会造成整个 table 的重新布局， 而且 table 本身渲染就慢")]),t._v(" "),a("li",[t._v("动画方面：动画执行的过程中，位置是不断变化的，会引起回流和重绘。如果动画执行的频率过高，去不断地计算当前元素的位置以及宽高等属性，比较消耗 CPU 计算资源，容易造成卡顿和网页性能的损耗。因此要选择一个合适的动画速度。")]),t._v(" "),a("li",[t._v("使用 visibility 替换 display: none ，因为前者只会引起重绘，后者会引发回流（改变了布局）")]),t._v(" "),a("li",[t._v("使用 opacity 代替 visibility，独立图层情况下，visibility 会触发重绘但是 opacity 不会")]),t._v(" "),a("li",[t._v("对具有复杂动画的元素使用绝对定位，使它脱离文档流，否则会引起父元素及后续元素频繁回流。")]),t._v(" "),a("li",[t._v("CSS3 硬件加速（GPU 加速），使用 css3 硬件加速，可以让 transform、opacity、filters 这些动画不会引起回流重绘 。但是对于动画的其它属性，比如 background-color 这些，还是会引起回流重绘的，不过它还是可以提升这些动画的性能。")]),t._v(" "),a("li",[t._v("避免设置多层内联样式，CSS 选择符从右往左匹配查找，避免节点层级过多。"),a("div",{staticClass:"language-html line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("a")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("span")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("span")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("a")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("style")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token style"}},[a("span",{pre:!0,attrs:{class:"token language-css"}},[t._v("\n  "),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("span")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" red"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("div > a > span")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" red"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("style")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br")])]),t._v("对于第一种设置样式的方式来说，浏览器只需要找到页面中所有的 span\n标签然后设置颜色，但是对于第二种设置样式的方式来说，浏览器首先需要找到所有的\nspan 标签，然后找到 span 标签上的 a 标签，最后再去找到 div\n标签，然后给符合这种条件的 span\n标签设置颜色，这样的递归过程就很复杂。所以我们应该尽可能的避免写过于具体的\nCSS 选择器，然后对于 HTML 来说也尽量少的添加无意义标签，保证层级扁平。")])])]),t._v(" "),a("li",[a("p",[t._v("JavaScript 优化")]),t._v(" "),a("ul",[a("li",[t._v("不要把 DOM 的属性值放在循环里，当成循环的变量。比如获取 offsetHeight 时，会触发回流。因为需要刷新缓冲区域，去获取真实的值")]),t._v(" "),a("li",[t._v("避免频繁读取会引发回流/重绘的属性，如果确实需要多次使用，就用一个变量缓存起来。")]),t._v(" "),a("li",[t._v("避免频繁操作样式，最好一次性重写 style 属性，或者将样式列表定义为 class 并一次性更改 class 属性。\n"),a("ul",[a("li",[t._v("通过 style 属性设置样式导致回流。避免设置多级内联样式，因为每个都会造成回流，样式应该合并在一个外部类，这样当该元素的 class 属性可被操控时仅会产生一个 reflow。")])])]),t._v(" "),a("li",[t._v("比如： v-if 、v-show, 频繁操作时候应该用 v-show, 减少回流 ？")]),t._v(" "),a("li",[t._v("避免频繁操作 DOM，创建一个 documentFragment，在它上面应用所有 DOM 操作，最后再把它添加到文档中。")])])])]),t._v(" "),a("h3",{attrs:{id:"相关链接-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#相关链接-2"}},[t._v("#")]),t._v(" 相关链接")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://csstriggers.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("页面解析参考"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://yuchengkai.cn/docs/frontend/browser.html#%E5%9B%BE%E5%B1%82",target:"_blank",rel:"noopener noreferrer"}},[t._v("重绘和回流 | 前端进阶之道"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/sisterAn/blog/issues/33",target:"_blank",rel:"noopener noreferrer"}},[t._v("浏览器的重绘与回流"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://segmentfault.com/a/1190000017329980",target:"_blank",rel:"noopener noreferrer"}},[t._v("你真的了解回流和重绘吗"),a("OutboundLink")],1)])]),t._v(" "),a("h2",{attrs:{id:"预处理器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#预处理器"}},[t._v("#")]),t._v(" 预处理器")]),t._v(" "),a("blockquote",[a("p",[t._v("以前 CSS 无法定义变量，无法进行运算，需要手写很多浏览器兼容前缀，写出来的代码可能会占很大篇幅")])]),t._v(" "),a("p",[t._v("预处理器可以让我们使用变量，继承，嵌套规则，运算，函数，scope 等编程的方式书写 css。一句话总结：增强 css 语法。")]),t._v(" "),a("p",[t._v("我们使用 sass，less，stylus 等语法编写的类 css 代码，然后经过编译，最后转换为真正的 css 代码。")]),t._v(" "),a("ul",[a("li",[t._v("Less")]),t._v(" "),a("li",[t._v("Sass")]),t._v(" "),a("li",[t._v("Scss")]),t._v(" "),a("li",[t._v("stylus")])]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/suilang/fe-started-to-buried/blob/master/css/SassVsLess.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("sass"),a("OutboundLink")],1)])]),t._v(" "),a("h2",{attrs:{id:"后处理器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#后处理器"}},[t._v("#")]),t._v(" 后处理器")]),t._v(" "),a("p",[t._v("后处理器可以将我们的 css 进行压缩，美化，以及加上浏览器前缀，减少我们的开发工作量。一句话总结：增强 css 的兼容性。")]),t._v(" "),a("p",[t._v("我们使用 postcss，将 css 进行美化，压缩，加前缀等操作。对 css 加入一些扩展。")]),t._v(" "),a("h2",{attrs:{id:"函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数"}},[t._v("#")]),t._v(" 函数")]),t._v(" "),a("h2",{attrs:{id:"css-in-js"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css-in-js"}},[t._v("#")]),t._v(" CSS-in-JS")]),t._v(" "),a("h2",{attrs:{id:"css-modules"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css-modules"}},[t._v("#")]),t._v(" CSS Modules")]),t._v(" "),a("ul",[a("li",[t._v("将css模块化，通过webpack帮我们自动化，动态生产类名称")]),t._v(" "),a("li",[t._v("解决了BEM要解决的问题，降低了css权重，模块之间的相依性")]),t._v(" "),a("li",[t._v("快速查找定位，module更加合适，同时module对于style向下传递的控制权也非常灵活，查看元素就可知道属于哪个组件")])]),t._v(" "),a("p",[a("img",{attrs:{src:"css-all-modules.png",alt:"css-modules"}}),t._v(" "),a("a",{attrs:{href:"https://vue-loader.vuejs.org/zh/guide/css-modules.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("css-moddules"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"postcss"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#postcss"}},[t._v("#")]),t._v(" postcss")]),t._v(" "),a("h3",{attrs:{id:"rem-vw-vh"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rem-vw-vh"}},[t._v("#")]),t._v(" rem && vw/vh")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/amfe/lib-flexible",target:"_blank",rel:"noopener noreferrer"}},[t._v("伸缩布局：lib-flexible"),a("OutboundLink")],1),t._v(" "),a("img",{attrs:{src:"css-all-rem.png",alt:"伸缩盒子"}})]),t._v(" "),a("p",[t._v("rem原理： 借助Javascript来动态修改mete标签中viewport的initial-scale的值，然后根据dpr修改html中的font-size值，再用rem来处理")]),t._v(" "),a("p",[t._v("vw兼容方案可以参考："),a("a",{attrs:{href:"https://juejin.im/entry/5aa09c3351882555602077ca",target:"_blank",rel:"noopener noreferrer"}},[t._v("如何在Vue项目中用vw实现移动端适配"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#优化"}},[t._v("#")]),t._v(" 优化")]),t._v(" "),a("ul",[a("li",[t._v("避免过度约束")]),t._v(" "),a("li",[t._v("避免后代选择符")]),t._v(" "),a("li",[t._v("避免链式选择符")]),t._v(" "),a("li",[t._v("使用紧凑的语法")]),t._v(" "),a("li",[t._v("避免不必要的命名空间")]),t._v(" "),a("li",[t._v("避免不必要的重复")]),t._v(" "),a("li",[t._v("最好使用表示语义的名字。一个好的类名应该是描述他是什么而不是像什么")]),t._v(" "),a("li",[t._v("避免！important，可以选择其他选择器")]),t._v(" "),a("li",[t._v("尽可能的精简规则，你可以合并不同类里的重复规则")]),t._v(" "),a("li",[t._v("CSS Sprites\n"),a("ul",[a("li",[t._v("将一个页面涉及到的所有图片都包含到一张大图中去，然后利用 CSS 的 background-image，background- repeat，background-position 的组合进行背景定位。利用 CSS Sprites 能很好地减少网页的 http 请求，从而大大的提高页面的性能；CSS Sprites 能减少图片的字节。")])])])]),t._v(" "),a("h2",{attrs:{id:"学习网站"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#学习网站"}},[t._v("#")]),t._v(" 学习网站")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://drafts.csswg.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("w3c 规范"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.w3cplus.com/CSS3?page=8",target:"_blank",rel:"noopener noreferrer"}},[t._v("大漠"),a("OutboundLink")],1),t._v(": 《图解 CSS3：核心技术与案例实战》")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.zhangxinxu.com/wordpress/category/css/",target:"_blank",rel:"noopener noreferrer"}},[t._v("张鑫旭"),a("OutboundLink")],1),t._v(": 《CSS 世界》\n")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.yuque.com/cssconf",target:"_blank",rel:"noopener noreferrer"}},[t._v("CSS 开发者大会"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);s.default=n.exports}}]);